buildscript {
    //ext : build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    /*
    repositories : 각종 의존성(라이브러리)들을 어떤 원격저장소에서 받을지를 정한다.
    기본적으로 mavenCentral을 많이 사용하지만, 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용.
    mavenCentral은 이전부터 많이 사용하는 저장소지만, 본인이 만든 라이브러리를 업로드하기 위해서는 정말 많은 과정과 설정이 필요하다.
    그러다 보니 개발자들이 직접 만든 라이브러리를 업로드하는 것이 힘들어 점점 공유가 안 되는 상황이 발생했다.
    최근에 나온 jcenter는 이런 문제점을 개선하여 라이브러리 업로드를 간단하게 하였다.
    또한, 여기서 한걸음 더 나아가 jcenter에 라이브러리를 업로드하면 mavenCentral에도 업로드될 수 있도록 자동화를 할 수 있다.
    그러다 보니 개발자들의 라이브러리가 점점 jcenter로 이동하고 있다.1
    여기서는 mavenCentral, jcenter 둘 다 등록해서 사용하겠다.
    */
    repositories{
        mavenCentral()
        jcenter()
    }
    //dependencies : 프로젝트 개발에 필요한 의존성들을 선언하는 곳.
    //여기서는 rog.springframework.boot:spring-boot-starter-web와
    //org.springframework.boot:spring-boot-starter-test를 받도록 선언되어 있다.
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//앞서 선언한 플러그인 의존성들을 적용할 것인지를 결정하는 코드.
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' //스프링 부트의 의존성들을 관리해주는 플러그인. 필수!
// 위 4개 플러그인은 자바와 스프링 부트를 사용하기 위해서는 필수 플러그인들이 항상 추가.


group 'com.gunbae.www'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

/*dependencies : 프로젝트 개발에 필요한 의존성들을 선언하는 곳.
여기서는 rog.springframework.boot:spring-boot-starter-web와
org.springframework.boot:spring-boot-starter-test를 받도록 선언되어 있다.
재미있는 것은 인텔리제이는 메이븐 저장소의 데이터를 인덱싱해서 관리하기 때문에
커뮤니티 버전을 사용해도 의존성 자동완성이 가능하다.

compile 메소드 안에 라이브러리의 이름의 앞부분만 추가한 뒤 자동완성을 사용하면 해당 라이브러리의 목록을 볼 수 있다.
의존성 코드는 특정버전을 명시하면 안 됩니다.
버전을 명시하지 않아야마나 맨 위에 작성한
'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'의 버전을 따라가게 됩니다.
이렇게 관리할 경우 각 라이브러리들의 버전 관리가 한 곳에 집중되고,
버전 충돌 문제도 해결되어 편하게 개발을 진행할 수 있습니다.
*/
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}